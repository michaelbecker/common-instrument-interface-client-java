/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tainstruments.mercury.cii_test_app;
import com.tainstruments.mercury.common_instrument_interface.*;
import com.tainstruments.mercury.common_messages.*;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.WARNING_MESSAGE;
import javax.swing.SwingUtilities;
import javax.swing.plaf.metal.*;



public class MainJframe extends javax.swing.JFrame {

    /**
     * Creates new form MainJframe
     */
    public MainJframe() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        procEndStatusTextField = new javax.swing.JTextField();
        procStateTextField = new javax.swing.JTextField();
        procSegIdxTextField = new javax.swing.JTextField();
        procIdTextField = new javax.swing.JTextField();
        getProcedureStatusSyncButton = new javax.swing.JButton();
        getProcedureStatusAsyncButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ipAddressTextField = new javax.swing.JTextField();
        connectButton = new javax.swing.JButton();
        disconnectButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        realTimeTextArea = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cortexVersionTextField = new javax.swing.JTextField();
        getCortexVersionSyncButton = new javax.swing.JButton();
        getCortexVersionAsyncButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        serialNumberTextField = new javax.swing.JTextField();
        setSnSyncButton = new javax.swing.JButton();
        setSnAsyncButton = new javax.swing.JButton();
        getSnSyncButton = new javax.swing.JButton();
        getSnAsyncButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        instrumentNameTextField = new javax.swing.JTextField();
        getInstrumentNameAsyncButton = new javax.swing.JButton();
        setInstrumentNameSyncButton = new javax.swing.JButton();
        getInstrumentNameSyncButton = new javax.swing.JButton();
        setInstrumentNameAsyncButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        instrumentLocationTextField = new javax.swing.JTextField();
        getInstrumentLocationSyncButton = new javax.swing.JButton();
        setInstrumentLocationSyncButton = new javax.swing.JButton();
        getInstrumentLocationAsyncButton = new javax.swing.JButton();
        setInstrumentLocationAsyncButton = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        netsetIpTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        netsetMaskTextField = new javax.swing.JTextField();
        netsetGateTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        netsetMacTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        dhcpActiveRadioButton = new javax.swing.JRadioButton();
        staticActiveRadioButton = new javax.swing.JRadioButton();
        setNetworkSyncButton = new javax.swing.JButton();
        getNetworkSyncButton = new javax.swing.JButton();
        getNetworkAsyncButton = new javax.swing.JButton();
        setNetworkAsyncButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CII Comms Test App");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel5.setText("State");

        jLabel6.setText("End Status");

        jLabel7.setText("Segment");

        jLabel8.setText("Procedure ID");

        getProcedureStatusSyncButton.setText("Get Sync");
        getProcedureStatusSyncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getProcedureStatusSyncButtonActionPerformed(evt);
            }
        });

        getProcedureStatusAsyncButton.setText("Get Async");
        getProcedureStatusAsyncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getProcedureStatusAsyncButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(procIdTextField))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(procStateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(procEndStatusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(procSegIdxTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(getProcedureStatusSyncButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getProcedureStatusAsyncButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(procEndStatusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(procStateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(procSegIdxTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(procIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(getProcedureStatusSyncButton)
                    .addComponent(getProcedureStatusAsyncButton))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("IP Address");

        ipAddressTextField.setText("10.52.58.139");
        ipAddressTextField.setName(""); // NOI18N

        connectButton.setText("Connect");
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });

        disconnectButton.setText("Disconnect");
        disconnectButton.setEnabled(false);
        disconnectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disconnectButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ipAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(connectButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(disconnectButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ipAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(connectButton)
                    .addComponent(disconnectButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Real Time Signals"));

        realTimeTextArea.setEditable(false);
        realTimeTextArea.setColumns(20);
        realTimeTextArea.setRows(5);
        realTimeTextArea.setToolTipText("");
        realTimeTextArea.setAutoscrolls(false);
        jScrollPane1.setViewportView(realTimeTextArea);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 25, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setText("Cortex Version");

        getCortexVersionSyncButton.setText("Get Sync");
        getCortexVersionSyncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getCortexVersionSyncButtonActionPerformed(evt);
            }
        });

        getCortexVersionAsyncButton.setText("Get Async");
        getCortexVersionAsyncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getCortexVersionAsyncButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cortexVersionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(getCortexVersionSyncButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(getCortexVersionAsyncButton)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cortexVersionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(getCortexVersionSyncButton)
                    .addComponent(getCortexVersionAsyncButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setText("Serial Number");

        setSnSyncButton.setText("Set Sync");
        setSnSyncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setSnSyncButtonActionPerformed(evt);
            }
        });

        setSnAsyncButton.setText("Set Async");

        getSnSyncButton.setText("Get Sync");
        getSnSyncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getSnSyncButtonActionPerformed(evt);
            }
        });

        getSnAsyncButton.setText("Get Async");
        getSnAsyncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getSnAsyncButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(serialNumberTextField)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(getSnAsyncButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(getSnSyncButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(setSnSyncButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(setSnAsyncButton, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(serialNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(getSnSyncButton)
                    .addComponent(setSnSyncButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(getSnAsyncButton)
                    .addComponent(setSnAsyncButton))
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel9.setText("Instrument Name");

        getInstrumentNameAsyncButton.setText("Get Async");
        getInstrumentNameAsyncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getInstrumentNameAsyncButtonActionPerformed(evt);
            }
        });

        setInstrumentNameSyncButton.setText("Set Sync");
        setInstrumentNameSyncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setInstrumentNameSyncButtonActionPerformed(evt);
            }
        });

        getInstrumentNameSyncButton.setText("Get Sync");
        getInstrumentNameSyncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getInstrumentNameSyncButtonActionPerformed(evt);
            }
        });

        setInstrumentNameAsyncButton.setText("Set Async");
        setInstrumentNameAsyncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setInstrumentNameAsyncButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(instrumentNameTextField)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(getInstrumentNameAsyncButton)
                            .addGap(30, 30, 30)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(setInstrumentNameSyncButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(setInstrumentNameAsyncButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(getInstrumentNameSyncButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(instrumentNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(getInstrumentNameSyncButton)
                    .addComponent(setInstrumentNameSyncButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(getInstrumentNameAsyncButton)
                    .addComponent(setInstrumentNameAsyncButton))
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel10.setText("Instrument Location");

        getInstrumentLocationSyncButton.setText("Get Sync");
        getInstrumentLocationSyncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getInstrumentLocationSyncButtonActionPerformed(evt);
            }
        });

        setInstrumentLocationSyncButton.setText("Set Sync");
        setInstrumentLocationSyncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setInstrumentLocationSyncButtonActionPerformed(evt);
            }
        });

        getInstrumentLocationAsyncButton.setText("Get Async");
        getInstrumentLocationAsyncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getInstrumentLocationAsyncButtonActionPerformed(evt);
            }
        });

        setInstrumentLocationAsyncButton.setText("Set Async");
        setInstrumentLocationAsyncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setInstrumentLocationAsyncButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(instrumentLocationTextField)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(getInstrumentLocationSyncButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(setInstrumentLocationSyncButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(getInstrumentLocationAsyncButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(setInstrumentLocationAsyncButton)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(instrumentLocationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(getInstrumentLocationSyncButton)
                    .addComponent(setInstrumentLocationSyncButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(getInstrumentLocationAsyncButton)
                    .addComponent(setInstrumentLocationAsyncButton))
                .addContainerGap())
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setText("IP Address");

        jLabel11.setText("Netmask");

        jLabel12.setText("Gateway");

        jLabel13.setText("MAC Address");

        dhcpActiveRadioButton.setText("DHCP");
        dhcpActiveRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dhcpActiveRadioButtonActionPerformed(evt);
            }
        });

        staticActiveRadioButton.setText("Static");
        staticActiveRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staticActiveRadioButtonActionPerformed(evt);
            }
        });

        setNetworkSyncButton.setText("Set Sync");
        setNetworkSyncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setNetworkSyncButtonActionPerformed(evt);
            }
        });

        getNetworkSyncButton.setText("Get Sync");
        getNetworkSyncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getNetworkSyncButtonActionPerformed(evt);
            }
        });

        getNetworkAsyncButton.setText("Get Async");
        getNetworkAsyncButton.setToolTipText("");
        getNetworkAsyncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getNetworkAsyncButtonActionPerformed(evt);
            }
        });

        setNetworkAsyncButton.setText("Set Async");
        setNetworkAsyncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setNetworkAsyncButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(dhcpActiveRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(staticActiveRadioButton))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel3))
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(netsetMacTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                                    .addComponent(netsetIpTextField)
                                    .addComponent(netsetMaskTextField)
                                    .addComponent(netsetGateTextField)))))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(getNetworkAsyncButton)
                            .addComponent(getNetworkSyncButton))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(setNetworkSyncButton)
                            .addComponent(setNetworkAsyncButton))
                        .addGap(0, 41, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(netsetIpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(netsetMaskTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(netsetGateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(netsetMacTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dhcpActiveRadioButton)
                    .addComponent(staticActiveRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setNetworkSyncButton)
                    .addComponent(getNetworkSyncButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(getNetworkAsyncButton)
                    .addComponent(setNetworkAsyncButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents



    private CiiClient ciiClient;
    private SerialNumber serialNumber;
    private RealTimeSignals realTimeSignals;
    private CortexSoftwareVersion cortexSoftwareVersion;
    private ProcedureStatus procedureStatus;
    private InstrumentName instrumentName;
    private InstrumentLocation instrumentLocation;
    private NetworkSettings networkSettings;

    
    private class SerialNumberUI implements Observer, Runnable {
        
        @Override
        public void update(Observable o, Object arg) {
            SwingUtilities.invokeLater(this);
        }

        @Override
        public void run(){
            serialNumberTextField.setText(serialNumber.get());
        }
    }

    
    private class InstrumentNameUI implements Observer, Runnable {

        @Override
        public void update(Observable o, Object arg) {
            SwingUtilities.invokeLater(this);
        }

        @Override
        public void run(){
            instrumentNameTextField.setText(instrumentName.get());
        }
    }


    private class InstrumentLocationUI implements Observer, Runnable {

        @Override
        public void update(Observable o, Object arg) {
            SwingUtilities.invokeLater(this);
        }

        @Override
        public void run(){
            instrumentLocationTextField.setText(instrumentLocation.get());
        }
    }


    private class RealTimeSignalUI implements Observer, Runnable {
        
        @Override
        public void update(Observable o, Object arg) {
            SwingUtilities.invokeLater(this);
        }

        @Override
        public void run(){
            float [] signals = realTimeSignals.get();
            if ((signals == null) || (signals.length == 0)) {
                realTimeTextArea.setText("");
            }
            else{
                StringBuilder sb = new StringBuilder();
                for (int i=0; i<signals.length - 1; i++){
                    sb.append(signals[i]);
                    sb.append("\n");
                }
                sb.append(signals[signals.length - 1]);
                
                realTimeTextArea.setText(sb.toString());
            }
        }
        
    }


    private class CortexVersionUI implements Observer, Runnable {

        @Override
        public void update(Observable o, Object arg) {
            SwingUtilities.invokeLater(this);
        }

        @Override
        public void run(){
            SoftwareVersion ver = cortexSoftwareVersion.get();
            if (ver == null){
                cortexVersionTextField.setText("");
            }
            else{
                cortexVersionTextField.setText(ver.toString());
            }
        }
    }

    
    private class ProcedureStatusUI implements Observer, Runnable {
        @Override
        public void update(Observable o, Object arg) {
            SwingUtilities.invokeLater(this);
        }

        @Override
        public void run(){
            ProcedureStatusData s = procedureStatus.get();
            if (s == null){
                procStateTextField.setText("");
                procEndStatusTextField.setText("");
                procIdTextField.setText("");
                procSegIdxTextField.setText("");
            }
            else{
                procStateTextField.setText(s.runState.toString());
                procEndStatusTextField.setText(s.endStatus.toString());
                procIdTextField.setText(s.guid.toString());
                procSegIdxTextField.setText(Integer.toString(s.curSegmentIndex));
            }
        }
    }


    private class NetworkSettingsUI implements Observer, Runnable {

        @Override
        public void update(Observable o, Object arg) {
            SwingUtilities.invokeLater(this);
        }

        @Override
        public void run(){
            NetworkSettingsData ns = networkSettings.get();
            PopulateNetworkGUI(ns);
        }
    }
    
    private void PopulateNetworkGUI(NetworkSettingsData ns){
        if (ns != null){
            netsetIpTextField.setText(ns.ipAddress.toString());
            netsetMaskTextField.setText(ns.netmask.toString());
            netsetGateTextField.setText(ns.gateway.toString());
            netsetMacTextField.setText(ns.MAC.toString());

            if (ns.isDhcp){
                dhcpActiveRadioButton.setSelected(true);
                staticActiveRadioButton.setSelected(false);
            }
            else{
                dhcpActiveRadioButton.setSelected(false);
                staticActiveRadioButton.setSelected(true);
            }
        }
        else{
            netsetIpTextField.setText("");
            netsetMaskTextField.setText("");
            netsetGateTextField.setText("");
            netsetMacTextField.setText("");
            dhcpActiveRadioButton.setSelected(false);
            staticActiveRadioButton.setSelected(false);
        }
    }

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed

        ciiClient = new CiiClient(ipAddressTextField.getText());
        boolean success = ciiClient.connect(ciiClient.AccessLevel_LocalUI);
        
        connectButton.setEnabled(!success);
        disconnectButton.setEnabled(success);
        ipAddressTextField.setEditable(!success);
        
        serialNumber = new SerialNumber(ciiClient);
        serialNumber.addObserver(new SerialNumberUI());

        realTimeSignals = new RealTimeSignals(ciiClient);
        realTimeSignals.addObserver(new RealTimeSignalUI());

        cortexSoftwareVersion = new CortexSoftwareVersion(ciiClient);
        cortexSoftwareVersion.addObserver(new CortexVersionUI());

        procedureStatus = new ProcedureStatus(ciiClient);
        procedureStatus.addObserver(new ProcedureStatusUI());

        instrumentName = new InstrumentName(ciiClient);
        instrumentName.addObserver(new InstrumentNameUI());
        
        instrumentLocation = new InstrumentLocation(ciiClient);
        instrumentLocation.addObserver(new InstrumentLocationUI());

        networkSettings = new NetworkSettings(ciiClient);
        networkSettings.addObserver(new NetworkSettingsUI());
    }//GEN-LAST:event_connectButtonActionPerformed

    private void disconnectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disconnectButtonActionPerformed

        ciiClient.disconnect();
        connectButton.setEnabled(true);
        disconnectButton.setEnabled(false);
        ipAddressTextField.setEditable(true);
    }//GEN-LAST:event_disconnectButtonActionPerformed

    private void setSnSyncButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setSnSyncButtonActionPerformed

        boolean success = serialNumber.setSynchronous(serialNumberTextField.getText());
        if (success){
            serialNumberTextField.setText(serialNumber.get());
        }
        else{
            serialNumberTextField.setText("** FAILED **");
        }
    }//GEN-LAST:event_setSnSyncButtonActionPerformed

    private void getInstrumentNameAsyncButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getInstrumentNameAsyncButtonActionPerformed
        String name = instrumentName.get();
        instrumentNameTextField.setText(name);
    }//GEN-LAST:event_getInstrumentNameAsyncButtonActionPerformed

    private void getInstrumentNameSyncButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getInstrumentNameSyncButtonActionPerformed

        String name = instrumentName.getSynchronous();
        instrumentNameTextField.setText(name);

    }//GEN-LAST:event_getInstrumentNameSyncButtonActionPerformed

    private void setInstrumentNameSyncButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setInstrumentNameSyncButtonActionPerformed

        boolean success = instrumentName.setSynchronous(instrumentNameTextField.getText());
        if (success){
            instrumentNameTextField.setText(instrumentName.get());
        }
        else{
            instrumentNameTextField.setText("** FAILED **");
        }
    }//GEN-LAST:event_setInstrumentNameSyncButtonActionPerformed

    private void getInstrumentLocationSyncButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getInstrumentLocationSyncButtonActionPerformed

        String loc = instrumentLocation.getSynchronous();
        instrumentLocationTextField.setText(loc);
    }//GEN-LAST:event_getInstrumentLocationSyncButtonActionPerformed

    private void getInstrumentLocationAsyncButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getInstrumentLocationAsyncButtonActionPerformed

        String loc = instrumentLocation.get();
        instrumentLocationTextField.setText(loc);
    }//GEN-LAST:event_getInstrumentLocationAsyncButtonActionPerformed

    private void setInstrumentLocationSyncButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setInstrumentLocationSyncButtonActionPerformed

        boolean success = instrumentLocation.setSynchronous(instrumentLocationTextField.getText());
        if (success){
            instrumentLocationTextField.setText(instrumentLocation.get());
        }
        else{
            instrumentLocationTextField.setText("** FAILED **");
        }
    }//GEN-LAST:event_setInstrumentLocationSyncButtonActionPerformed

    private void setInstrumentLocationAsyncButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setInstrumentLocationAsyncButtonActionPerformed

        boolean success = instrumentLocation.set(instrumentLocationTextField.getText());
        if (!success){
            instrumentLocationTextField.setText("** FAILED **");
        }
        else{
            instrumentLocationTextField.setText("Working...");
        }
    }//GEN-LAST:event_setInstrumentLocationAsyncButtonActionPerformed

    private void getCortexVersionSyncButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getCortexVersionSyncButtonActionPerformed

        SoftwareVersion ver = cortexSoftwareVersion.getSynchronous();
        if (ver == null){
            cortexVersionTextField.setText("");
        }
        else{
            cortexVersionTextField.setText(ver.toString());
        }
    }//GEN-LAST:event_getCortexVersionSyncButtonActionPerformed

    private void getCortexVersionAsyncButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getCortexVersionAsyncButtonActionPerformed

        SoftwareVersion ver = cortexSoftwareVersion.get();
        if (ver == null){
            cortexVersionTextField.setText("");
        }
        else{
            cortexVersionTextField.setText(ver.toString());
        }
    }//GEN-LAST:event_getCortexVersionAsyncButtonActionPerformed

    private void setInstrumentNameAsyncButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setInstrumentNameAsyncButtonActionPerformed

        boolean success = instrumentName.set(instrumentNameTextField.getText());
        if (!success){
            instrumentNameTextField.setText("** FAILED **");
        }
        else{
            instrumentNameTextField.setText("Working...");
        }

    }//GEN-LAST:event_setInstrumentNameAsyncButtonActionPerformed

    private void getProcedureStatusSyncButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getProcedureStatusSyncButtonActionPerformed

        ProcedureStatusData s = procedureStatus.getSynchronous();
        if (s == null){
            procStateTextField.setText("");
            procEndStatusTextField.setText("");
            procIdTextField.setText("");
            procSegIdxTextField.setText("");
        }
        else{
            procStateTextField.setText(s.runState.toString());
            procEndStatusTextField.setText(s.endStatus.toString());
            procIdTextField.setText(s.guid.toString());
            procSegIdxTextField.setText(Integer.toString(s.curSegmentIndex));
        }
    }//GEN-LAST:event_getProcedureStatusSyncButtonActionPerformed

    private void getProcedureStatusAsyncButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getProcedureStatusAsyncButtonActionPerformed
        ProcedureStatusData s = procedureStatus.get();
        if (s == null){
            procStateTextField.setText("");
            procEndStatusTextField.setText("");
            procIdTextField.setText("");
            procSegIdxTextField.setText("");
        }
        else{
            procStateTextField.setText(s.runState.toString());
            procEndStatusTextField.setText(s.endStatus.toString());
            procIdTextField.setText(s.guid.toString());
            procSegIdxTextField.setText(Integer.toString(s.curSegmentIndex));
        }
    }//GEN-LAST:event_getProcedureStatusAsyncButtonActionPerformed

    private void getSnSyncButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getSnSyncButtonActionPerformed
        String sn = serialNumber.getSynchronous();
        // works if sn == null
        serialNumberTextField.setText(sn);
    }//GEN-LAST:event_getSnSyncButtonActionPerformed

    private void getSnAsyncButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getSnAsyncButtonActionPerformed
        String sn = serialNumber.get();
        // works if sn == null
        serialNumberTextField.setText(sn);
    }//GEN-LAST:event_getSnAsyncButtonActionPerformed

    private void setNetworkSyncButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setNetworkSyncButtonActionPerformed

        boolean success;

        if (dhcpActiveRadioButton.isSelected()){
            try {
                success = networkSettings.setSynchronous(true, null, null, null);
                if (!success){
                    JOptionPane.showMessageDialog(null, "SET failed", "Failed Setting Network Settings", WARNING_MESSAGE);
                }
            } catch (InvalidTaIpAddressException | InvalidNetworkSettingsException ex) {
                JOptionPane.showMessageDialog(null, ex, "Failed Setting Network Settings", WARNING_MESSAGE);
            }
        }
        else if (staticActiveRadioButton.isSelected()){
            try {
                success = networkSettings.setSynchronous(false,
                                                    netsetIpTextField.getText(),
                                                    netsetMaskTextField.getText(),
                                                    netsetGateTextField.getText());
                if (!success){
                    JOptionPane.showMessageDialog(null, "SET failed", "Failed Setting Network Settings", WARNING_MESSAGE);
                }
            } catch (InvalidTaIpAddressException | InvalidNetworkSettingsException ex) {
                JOptionPane.showMessageDialog(null, ex, "Failed Setting Network Settings", WARNING_MESSAGE);
            }
        }

        NetworkSettingsData ns = networkSettings.getSynchronous();
        PopulateNetworkGUI(ns);
    }//GEN-LAST:event_setNetworkSyncButtonActionPerformed

    private void dhcpActiveRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dhcpActiveRadioButtonActionPerformed
        staticActiveRadioButton.setSelected(false);
        dhcpActiveRadioButton.setSelected(true);
    }//GEN-LAST:event_dhcpActiveRadioButtonActionPerformed

    private void staticActiveRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staticActiveRadioButtonActionPerformed
        staticActiveRadioButton.setSelected(true);
        dhcpActiveRadioButton.setSelected(false);
    }//GEN-LAST:event_staticActiveRadioButtonActionPerformed

    private void setNetworkAsyncButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setNetworkAsyncButtonActionPerformed

        boolean success;

        if (dhcpActiveRadioButton.isSelected()){
            try {
                success = networkSettings.set(true, null, null, null);
                if (!success){
                    JOptionPane.showMessageDialog(null, "SET failed", "Failed Setting Network Settings", WARNING_MESSAGE);
                }
            } catch (InvalidTaIpAddressException | InvalidNetworkSettingsException ex) {
                JOptionPane.showMessageDialog(null, ex, "Failed Setting Network Settings", WARNING_MESSAGE);
            }
        }
        else if (staticActiveRadioButton.isSelected()){
            try {
                success = networkSettings.set(  false,
                                                netsetIpTextField.getText(),
                                                netsetMaskTextField.getText(),
                                                netsetGateTextField.getText());
                if (!success){
                    JOptionPane.showMessageDialog(null, "SET failed", "Failed Setting Network Settings", WARNING_MESSAGE);
                }
            } catch (InvalidTaIpAddressException | InvalidNetworkSettingsException ex) {
                JOptionPane.showMessageDialog(null, ex, "Failed Setting Network Settings", WARNING_MESSAGE);
            }
        }

        NetworkSettingsData ns = networkSettings.get();
        PopulateNetworkGUI(ns);
    }//GEN-LAST:event_setNetworkAsyncButtonActionPerformed

    private void getNetworkSyncButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getNetworkSyncButtonActionPerformed
        NetworkSettingsData ns = networkSettings.getSynchronous();
        PopulateNetworkGUI(ns);
    }//GEN-LAST:event_getNetworkSyncButtonActionPerformed

    private void getNetworkAsyncButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getNetworkAsyncButtonActionPerformed
        NetworkSettingsData ns = networkSettings.get();
        PopulateNetworkGUI(ns);
    }//GEN-LAST:event_getNetworkAsyncButtonActionPerformed



    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            /*
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
            */
            //javax.swing.UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");
            //javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.motif.MotifLookAndFeel");
            //javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.gtk.GTKLookAndFeel");
            javax.swing.UIManager.setLookAndFeel("javax.swing.plaf.nimbus.NimbusLookAndFeel");

            
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainJframe().setVisible(true);
            }
        });
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connectButton;
    private javax.swing.JTextField cortexVersionTextField;
    private javax.swing.JRadioButton dhcpActiveRadioButton;
    private javax.swing.JButton disconnectButton;
    private javax.swing.JButton getCortexVersionAsyncButton;
    private javax.swing.JButton getCortexVersionSyncButton;
    private javax.swing.JButton getInstrumentLocationAsyncButton;
    private javax.swing.JButton getInstrumentLocationSyncButton;
    private javax.swing.JButton getInstrumentNameAsyncButton;
    private javax.swing.JButton getInstrumentNameSyncButton;
    private javax.swing.JButton getNetworkAsyncButton;
    private javax.swing.JButton getNetworkSyncButton;
    private javax.swing.JButton getProcedureStatusAsyncButton;
    private javax.swing.JButton getProcedureStatusSyncButton;
    private javax.swing.JButton getSnAsyncButton;
    private javax.swing.JButton getSnSyncButton;
    private javax.swing.JTextField instrumentLocationTextField;
    private javax.swing.JTextField instrumentNameTextField;
    private javax.swing.JTextField ipAddressTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField netsetGateTextField;
    private javax.swing.JTextField netsetIpTextField;
    private javax.swing.JTextField netsetMacTextField;
    private javax.swing.JTextField netsetMaskTextField;
    private javax.swing.JTextField procEndStatusTextField;
    private javax.swing.JTextField procIdTextField;
    private javax.swing.JTextField procSegIdxTextField;
    private javax.swing.JTextField procStateTextField;
    private javax.swing.JTextArea realTimeTextArea;
    private javax.swing.JTextField serialNumberTextField;
    private javax.swing.JButton setInstrumentLocationAsyncButton;
    private javax.swing.JButton setInstrumentLocationSyncButton;
    private javax.swing.JButton setInstrumentNameAsyncButton;
    private javax.swing.JButton setInstrumentNameSyncButton;
    private javax.swing.JButton setNetworkAsyncButton;
    private javax.swing.JButton setNetworkSyncButton;
    private javax.swing.JButton setSnAsyncButton;
    private javax.swing.JButton setSnSyncButton;
    private javax.swing.JRadioButton staticActiveRadioButton;
    // End of variables declaration//GEN-END:variables
}
